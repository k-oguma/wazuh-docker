# Wazuh App Copyright (C) 2020 Wazuh Inc. (License GPLv2)
# Update: k-oguma / ktykogm
#   Here's a sample docker-compose.yml. For example, in the production environment will use the ansible jinja2 template.
version: '2'

services:
  wazuh:
    image: ktykogm/wazuh:3.12.3_7.6.2_k2
    hostname: wazuh-manager
    restart: always
    ports:
      - "1514:1514/udp"
      - "1515:1515"
      - "514:514/udp"
      - "55000:55000"
    environment:
      API_USER: hoge
      API_PASS: fuga
      SLACK_WEBHOOK_URL:
      SLACK_ALERT_LEVEL: 10
      LOCAL_RULES: |-
        <group name="syslog,sshd,">
          <rule id="5706" level="6" overwrite="yes">
            <if_sid>5700</if_sid>
            <match>Did not receive identification string from</match>
            <description>sshd: insecure connection attempt (scan).</description>
            <group>recon,pci_dss_11.4,gpg13_4.12,gdpr_IV_35.7.d,nist_800_53_SI.4,</group>
            <options>no_log</options>
          </rule>
        </group>

       # You can configure with also /srv/docker-volumes/wazuh/etc/. But it's better to set it up with entrypoint and unify manage with environment variables here if not a lot of configures. (e.g. Like the 12factor app).
    volumes:
      - wazuh_datastore:/var/ossec/data/:Z

  elasticsearch:
    image: wazuh/wazuh-elasticsearch:3.12.3_7.6.2
    hostname: elasticsearch
    restart: always
    ports:
      - "9200:9200"
    environment:
      - "ES_JAVA_OPTS=-Xms24g -Xmx24g -XX:MaxMetaspaceSize=512m -XX:MaxGCPauseMillis=2000 -XX:+UnlockDiagnosticVMOptions -XX:+PrintCompressedOopsMode"
      - ELASTIC_CLUSTER=true
      - CLUSTER_NODE_MASTER=true
      - CLUSTER_MASTER_NODE_NAME=es01
      - ELASTICSEARCH_USERNAME=hoge
      - ELASTICSEARCH_PASSWORD=fuga
      - API_USER=hoge
      - API_PASS=fuga
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 30g
    command: >
      sh -c '
        curl -O https://download.java.net/java/GA/jdk13.0.2/d4173c853231432d94f001e99d882ca7/8/GPL/openjdk-13.0.2_linux-x64_bin.tar.gz &&
        /bin/sha256sum openjdk-13.0.2_linux-x64_bin.tar.gz |
          grep $$(curl -s "https://download.java.net/java/GA/jdk13.0.2/d4173c853231432d94f001e99d882ca7/8/GPL/openjdk-13.0.2_linux-x64_bin.tar.gz.sha256") &&
          tar xvfz openjdk-13.0.2_linux-x64_bin.tar.gz
      '
    volumes:
      - elasticsearch_datastore:/usr/share/elasticsearch/data:Z

  kibana:
    image: wazuh/wazuh-kibana:3.12.3_7.6.2
    hostname: kibana
    restart: always
    depends_on:
      - elasticsearch
    links:
      - elasticsearch:elasticsearch
      - wazuh:wazuh
    environment:
      - API_USER=hoge
      - API_PASS=fuga
      - ELASTICSEARCH_USERNAME=hoge
      - ELASTICSEARCH_PASSWORD=fuga

  nginx:
    image: k-oguma/wazuh-nginx:3.12.3_7.6.2_k1
    hostname: nginx
    restart: always
    environment:
      - NGINX_PORT=8080
      - NGINX_CREDENTIALS=hoge:fuga
      # Internal access via SSL termination on OAuth2_proxy.
      - NGINX_URL_SCHEME=http
      - BASIC_AUTH=no
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    depends_on:
      - kibana
    links:
      - kibana:kibana

volumes:
  wazuh_datastore:
    driver_opts:
      type: none
      device: /srv/docker-volumes/wazuh
      o: bind
  elasticsearch_datastore:
    driver_opts:
      type: none
      device: /srv/docker-volumes/elasticsearch
      o: bind

